<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Many craft. Wow. Such create</title><link href="http://maciej.lasyk.info/" rel="alternate"></link><link href="http://maciej.lasyk.info/feeds/tag/pelican.atom.xml" rel="self"></link><id>http://maciej.lasyk.info/</id><updated>2014-10-29T00:00:00+01:00</updated><entry><title>Remark</title><link href="http://maciej.lasyk.info/2014/Oct/29/remark/" rel="alternate"></link><updated>2014-10-29T00:00:00+01:00</updated><author><name>Maciej Lasyk</name></author><id>tag:maciej.lasyk.info,2014-10-29:2014/Oct/29/remark/</id><summary type="html">&lt;p&gt;&lt;center&gt;&lt;img alt="VIM" src="http://maciej.lasyk.info/images/vim.jpg" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;One of the rules that stay assures my productivity is using same tools
for many tasks. That's why I've been looking for Powerpoint / LibreImpress replacement.&lt;/p&gt;
&lt;p&gt;But it had to fullfill couple of requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt; based (so no need to learn new languages and could be created in VIM)&lt;/li&gt;
&lt;li&gt;Devops way - no clicking and fancy UIs, rather working in terminal&lt;/li&gt;
&lt;li&gt;No binary files so changes could be diffed easily (and VCSes make sense)&lt;/li&gt;
&lt;li&gt;Easy embedding of images&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And it's here: &lt;a href="http://remarkjs.com/"&gt;Remark&lt;/a&gt;. Hosted on &lt;a href="https://github.com/gnab/remark"&gt;GitHub&lt;/a&gt;, simple to use, quite a community around.&lt;/p&gt;
&lt;p&gt;Running those slideshows with use of:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;SimpleHTTPServer&lt;/span&gt; &lt;span class="mi"&gt;8001&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="markdown"></category><category term="remark"></category><category term="pelican"></category></entry><entry><title>Automating Pelican with Git</title><link href="http://maciej.lasyk.info/2014/Aug/19/automating-pelican-with-git/" rel="alternate"></link><updated>2014-08-19T00:35:00+02:00</updated><author><name>Maciej Lasyk</name></author><id>tag:maciej.lasyk.info,2014-08-19:2014/Aug/19/automating-pelican-with-git/</id><summary type="html">&lt;p&gt;&lt;center&gt;&lt;img alt="Pelican Automation with Git" src="http://maciej.lasyk.info/images/pelican-automation.png" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;This is a first blogpost of a whole series about working with
&lt;a href="http://docs.getpelican.com/"&gt;Pelican&lt;/a&gt;. I'll be publishing all future post with
the hashtag &lt;a href="tag/pelican.html"&gt;#pelican&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;What kind of automation?&lt;/h3&gt;
&lt;p&gt;My first step with migrating my &lt;a href="http://maciek.lasyk.info/sysop"&gt;old blog&lt;/a&gt; to
this &lt;strong&gt;Pelican - based&lt;/strong&gt; was to automate the whole process of deploying new
posts. I just want to work with &lt;strong&gt;Markdown&lt;/strong&gt; files on my laptop and push those
to the git repository. And let the rest magically happen in the background.&lt;/p&gt;
&lt;h3&gt;Architecture&lt;/h3&gt;
&lt;p&gt;Basically I write posts on my laptop, then I push changes to the remote bare
git repo, this repo has &lt;strong&gt;post-update&lt;/strong&gt; hook which communicates with my
webserver and tells him to pull all the changes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;laptop with markdowns ----&lt;span class="o"&gt;(&lt;/span&gt;git push&lt;span class="o"&gt;)&lt;/span&gt;----&amp;gt; remote git bare repo 
----&lt;span class="o"&gt;(&lt;/span&gt;post-update hook----&amp;gt; webserver
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Abracadabra&lt;/h3&gt;
&lt;p&gt;What's important here - I've added to the repo my whole &lt;strong&gt;pelican&lt;/strong&gt;
directory. This is because I'm realy lazy and just wanted to keep all the 
changes and use this repo also for backup purposes. Of course you'll want to
play with &lt;strong&gt;.gitignore&lt;/strong&gt; file and ommit couple of dirs and files :)&lt;/p&gt;
&lt;p&gt;On the server with git bare repo I've created &lt;strong&gt;hooks/post-update&lt;/strong&gt; file
(perms 0700) with following contents:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="c"&gt;# just invoke the update script on the webserver:&lt;/span&gt;
ssh home-docker &lt;span class="s1"&gt;&amp;#39;/home/docent/scripts/update_maciej.lasyk.info.sh&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As you can see I'm using here &lt;strong&gt;ssh home-docker&lt;/strong&gt; command. This is an alias
that exists in my &lt;strong&gt;~/.ssh/config&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Host home-docker
Hostname vm-9-containers.netrunner.lasyk.info
User docent
Port 22
ProxyCommand ssh -p 55555 docent@netrunner.lasyk.info nc %h %p 2&amp;gt; /dev/null
IdentityFile ~/.ssh/id_rsa
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This basically connects to VM hosting Docker containers through the bastion
server (no direct SSH allowed to containers VM from outside or DMZ).&lt;/p&gt;
&lt;p&gt;So now anytime I post something and commit it to the repo above script will be
invoked via SSH. And this calls another script - this time on webserver:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nv"&gt;GIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/bin/git

&lt;span class="nb"&gt;cd&lt;/span&gt; /srv/docker_mounts/nginx/public_html/maciej.lasyk.info/
&lt;span class="nv"&gt;$GIT&lt;/span&gt; fetch --all
&lt;span class="nv"&gt;$GIT&lt;/span&gt; reset --hard docent/master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Above script fetches all data from the remote repository and then sets the
last commit as the HEAD. No webserver restart is needed here as those are only
static files :)&lt;/p&gt;</summary><category term="pelican"></category><category term="git"></category></entry><entry><title>Moving to Pelican</title><link href="http://maciej.lasyk.info/2014/Aug/08/moving-to-pelican/" rel="alternate"></link><updated>2014-08-08T00:21:00+02:00</updated><author><name>Maciej Lasyk</name></author><id>tag:maciej.lasyk.info,2014-08-08:2014/Aug/08/moving-to-pelican/</id><summary type="html">&lt;p&gt;So it finally happened. After 6 months I started migrating my blog from crapy
Wordpress to &lt;a href="https://github.com/getpelican/pelican/"&gt;Pelican&lt;/a&gt;. There're still plenty of things I have to take care of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;git automation (pull / push)&lt;/li&gt;
&lt;li&gt;some commenting functionality&lt;/li&gt;
&lt;li&gt;layout polishing (current layout is based on &lt;a href="https://github.com/getpelican/pelican-themes/tree/master/monospace"&gt;monospace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;slug (call it: modrewrite / url fixing)&lt;/li&gt;
&lt;li&gt;images upload handling (I want all images I use in post content to be uploaded and reformatted automatically&lt;/li&gt;
&lt;li&gt;code syntax highlightning&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/getpelican/pelican-plugins"&gt;plugins&lt;/a&gt; review&lt;/li&gt;
&lt;li&gt;RSS handling&lt;/li&gt;
&lt;li&gt;tag cloud (I'll use only that instead of categories)&lt;/li&gt;
&lt;li&gt;maybe some spell - check? or rather will stick to VIM - based&lt;/li&gt;
&lt;li&gt;migrating posts from my old Wordpress - blog&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Looks like a plate is full. ETA? Will be delivered somehow between Monday and
end of the next year ;)&lt;/p&gt;
&lt;p&gt;What's beautiful here? It's 100% Markdown &amp;lt;- Pelican &amp;lt;- Nginx &amp;lt;- Docker &amp;lt;-
Fedora &amp;lt;- my home server :)&lt;/p&gt;</summary><category term="pelican"></category></entry></feed>